# Maintainer: Tim Stahlhut <stahta01@gmail.com>
# Contributor: Alexey Pavlov <alexpux@gmail.com>

_mingw_suff=mingw-w64-cross
_realname=gcc

# Package build options
_make_static_gcc_only=yes
_threads="win32"
_targets="i686-w64-mingw32 x86_64-w64-mingw32"
if [[ "$_make_static_gcc_only" != "yes" ]] ; then
  _enable_gcc_lto=yes   # set to no or yes as wanted
else
  _enable_gcc_lto=no    # needs to be no when making only static GCC
fi
#_enable_ada=yes
_enable_fortran=no
#_enable_objc=no

_basegccver=4.7
pkgbase="${_mingw_suff}-${_realname}${_basegccver}"
pkgname=("${_mingw_suff}-${_realname}${_basegccver}")
provides=("${_mingw_suff}-${_realname}")
conflicts=("${_mingw_suff}-${_realname}")
pkgver=4.7.4
pkgrel=1
pkgdesc="GCC for the MinGW-w64"
arch=('i686' 'x86_64')
url="http://gcc.gnu.org"
license=('GPL' 'LGPL' 'FDL' 'custom')
groups=("${_mingw_suff}-toolchain" "${_mingw_suff}")
depends=("zlib"
         "mpc"  
         "${_mingw_suff}-binutils" 
         "${_mingw_suff}-headers")
if [[ "$_make_static_gcc_only" != "yes" ]] ; then
  depends+=("${_mingw_suff}-crt"
            "${_mingw_suff}-winpthreads")
fi
makedepends=("gcc" 'lndir')
#checkdepends=('dejagnu')
optdepends=()
replaces=()
backup=()
options=('!strip' 'staticlibs' '!emptydirs' '!buildflags')
noextract=("${_realname}-${pkgver}.tar.bz2")
source=(
    "ftp://gcc.gnu.org/pub/gcc/releases/${_realname}-${pkgver}/${_realname}-${pkgver}.tar.bz2"
    '001-4.7-execstack.patch'
    '007-4.7-libffi-noinst.patch'
    '010-4.7-lto-plugin-soname.patch'
    '024-4.7-libitm-cygwin.patch'
    104-gcc-4.6.4-Fix-texi-docs-syntax-errors.patch
    '400-gcc-4.8-libstdc++export.patch'
    461-gcc-4.0-cfns-fix-mismatch-in-gnu_inline-attributes.patch
    940-dfp.m4-Add-support-for-cygwin-x64-target.patch
    941-config.build-Add-support-for-cygwin-x64-target.patch
    942-crossconfig.m4-Add-support-for-cygwin-x64-target.patch
    943-config.host-Add-support-for-cygwin-x64-target.patch
    944-configure-Regenerated.patch
    945-gcc-4.8-libdecnumber-cygwin64.patch
    946-configure-Regenerated.patch
    950-gcc-4.7-configure-msys2.patch
    951-gcc-4.8.0-msys2-spec.patch
    gcc-4.7-combined-all-patches-that-worked-fully-witho.patch
    'gcc-4.8-filename-output.patch'
    'gcc-4.8-lambda-ICE.patch'
    'gcc-4.8-iconv.patch'
    'gcc-4.8-libgcc-references.patch'
    'gcc-4.7-stdthreads.patch'
    'gcc-4.7-libstdc-cygwin.patch'
    'gcc-4.8-libatomic-cygwin.patch'
    'gcc-4.8-libffi-cygwin64.patch'
    'gcc-4.7-specs-cygwin.patch'
)
sha256sums=('92e61c6dc3a0a449e62d72a38185fda550168a86702dea07125ebd3ec3996282'
            '4942e94ccdf11ce260e029400bd1cee8b63e78d071ac2bae812ba261edb7b67b'
            'af90eb0eb49e06b4735f428fee514c6b87f349c1d3669c8bc7bb6250d4126c4e'
            '6e4322814f7b0f1d3ea3dbea0c8fa233d6ec9493354d7bd54e755ee971914d74'
            '1015575631397b588050e53aba5795cc8357e55a2754f8bc6214b564f38f5a06'
            '8a72e1b2cef99c78a9f7d8126d8509b580617fce68a289b8bcb05c98e4ffc548'
            '21191b4fd57ce5f230fcc97b4d9ae31bdc387d7c7c8e39436aa7e4268d278d3d'
            '714e18e8e1a89c149dfabde6eb6dd0a7518590b7a911643de761b6d31c7acd2d'
            'f9b3270704b1a7769053b72dbc4471829b0bc3395743c3a1927729ebfc13dbb1'
            '2fd097dcd783c187a480659939ab8cf133f697acde82e4e7b30609a9e6d0e8fe'
            'fba7508237bf8e6ae261ed6fcdbc02442241444048acef5c8e0a88d18d76c24b'
            'feb0a38f4fdd5dd8bdeaa1e33d608e4a905c8ebea688b282591ed4211d19dcf2'
            '50d5449c610804fb1b059cbb28edf849e1e51c32e326a8b8d95301dff39c85a1'
            '865ed62eb9af20142fb2cae6708c52aabdc538284e8a88648bfec97abb7ccf70'
            '543d3f18edf80e125ec185df6a8d1e77db493f4e11b052397405ea143d88efb1'
            '78e634b5a9ac24672c933ff027de426b9453d5fa21b9a05fb9e7de4747e605cb'
            '2106c9679c19a133ffffe64b9c950094695cf0d4e2609a90702f0d9e8bb9cfbc'
            '6119c1b82a1ac364d19ed83e8a886655f0d9cbeec3aba13624d0ca6817cf1570'
            '9278e745190bac0b3f6ef74972aecd4e2891d4930f7b6fa8840c3d4f7fbf4f98'
            '301cfbe339043ca14205140acbec1d0f55178f01365ff309e4ddb90a3c934031'
            '9e0401c3e69317a45269fb689e4e89ee8f46997c2c52b11812a11c9faf142ede'
            '52ddd5b2d5f337efa7475de211eccebd70e343c902107343b22d66951fb799d3'
            '5e0fc1437ce0b357e78d440692e3a30a7905a5f360a67928a95b14ec8d45365b'
            '027a411b3f222d4c43f7ea59e893d908af6d869a6c5c25d9109d1088f494e3c9'
            '6812f82299b33c5e354e8a54fcc96149957e9ffa35d576537923621d97c6817c'
            '7f3410ccc61f4b60ae9fc4201cc321f681771196e44fc61639bdf924a9132eec'
            '3d33128b4ba26fe35e681dd17cb521a757b7801dec63ca7437eb784ec985d491')

# =========================================== #
# Helper macro(s) to help make tasks easier   #
apply_patch_with_msg() {
  for _fname in "$@"
  do
    msg2 "Applying ${_fname}"
    patch -Nbp1 -i "${srcdir}"/${_fname}
  done
}

replace_file_exists() {
  for _fname in "$@"
  do
    if [[ -f "${srcdir}/${_realname}-${pkgver}/${_fname}" && -f "${startdir}/${_realname}-${pkgver}-extracted/${_fname}" ]]; then
      msg2 "Replacing ${_fname}"
      cp  "${startdir}/${_realname}-${pkgver}-extracted/${_fname}" "${srcdir}/${_realname}-${pkgver}/${_fname}"
    else
      msg2 "Skipping replacement of ${_fname}"
    fi
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f ${_fname} ]; then
      rm -rf ${_fname}
    fi
  done
}
# =========================================== #

prepare() {
  if [ ! -d "${startdir}/${_realname}-${pkgver}-extracted" ]; then
    msg2 "Extracting archive"
    mkdir -p  "${startdir}/${_realname}-${pkgver}-extracted"
    tar --strip-components=1 -xjf ${startdir}/${_realname}-${pkgver}.tar.bz2 -C "${startdir}/${_realname}-${pkgver}-extracted"
  fi

  #msg2 "Synchronizing source directory"
  #mkdir -p "${srcdir}/${_realname}-${pkgver}"
  #time rsync --stats --itemize-changes --recursive --checksum --times \
    #"${startdir}/${_realname}-${pkgver}-extracted"/* "${srcdir}/${_realname}-${pkgver}"

  if [ ! -d "${srcdir}/${_realname}-${pkgver}" ]; then
    msg2 "Creating ${_realname}-${pkgver} folder and files"
    mkdir -p ${_realname}-${pkgver}
    cd ${startdir}/${_realname}-${pkgver}-extracted && \
      cp -R --target-directory="${srcdir}/${_realname}-${pkgver}" *
  else
    replace_file_exists \
      gcc/config/i386/mingw-w64.h \
      Makefile.in                 \
      boehm-gc/configure          \
      boehm-gc/configure.ac       \
      config.guess                \
      config.rpath                \
      config.sub                  \
      config/dfp.m4               \
      config/elf.m4               \
      config/lthostflags.m4       \
      config/mmap.m4              \
      config/picflag.m4           \
      config/tcl.m4               \
      configure                   \
      configure.ac                \
      fixincludes/configure       \
      fixincludes/mkfixinc.sh     \
      gcc/builtin-attrs.def       \
      gcc/c-family/c-opts.c       \
      gcc/config.build            \
      gcc/config.gcc              \
      gcc/config.host             \
      gcc/config/i386//cygming.opt              \
      gcc/config/i386//cygwin.h   \
      gcc/config/i386//mingw.opt  \
      gcc/config/i386/cygwin-stdint.h           \
      gcc/configure               \
      gcc/configure.ac            \
      gcc/cp/cfns.gperf           \
      gcc/cp/cfns.h               \
      gcc/cp/semantics.c          \
      gcc/doc/gcc.texi            \
      gcc/gtm-builtins.def        \
      libada/configure            \
      libatomic/Makefile.am       \
      libatomic/Makefile.in       \
      libatomic/aclocal.m4        \
      libatomic/configure         \
      libatomic/configure.ac      \
      libatomic/configure.tgt     \
      libbacktrace/configure      \
      libdecnumber/configure      \
      libffi/acinclude.m4         \
      libffi/configure            \
      libffi/configure.ac         \
      libffi/src/x86/ffi.c        \
      libffi/src/x86/win64.S      \
      libgcc/config.host          \
      libgcc/config/i386/cygming-crtbegin.c     \
      libgcc/configure            \
      libgcc/gthr-posix.h         \
      libgfortran/acinclude.m4    \
      libgfortran/configure       \
      libgo/config/libtool.m4     \
      libgo/config/ltmain.sh      \
      libgo/config/ltoptions.m4   \
      libgo/configure             \
      libgomp/configure           \
      libiberty/configure         \
      libiberty/configure.ac      \
      libitm/Makefile.am          \
      libitm/Makefile.in          \
      libitm/aclocal.m4           \
      libitm/configure            \
      libitm/configure.ac         \
      libitm/configure.tgt        \
      libitm/libitm.h             \
      libitm/libitm_i.h           \
      libmudflap/configure        \
      libobjc/configure           \
      libobjc/configure.ac        \
      libquadmath/configure       \
      libsanitizer/configure      \
      libssp/configure            \
      libstdc++-v3/acinclude.m4   \
      libstdc++-v3/config/abi/pre/gnu.ver       \
      libstdc++-v3/configure      \
      libstdc++-v3/configure.host \
      libstdc++-v3/crossconfig.m4 \
      libstdc++-v3/testsuite/lib/libstdc++.exp  \
      libtool.m4                  \
      ltmain.sh                   \
      lto-plugin/Makefile.am      \
      lto-plugin/Makefile.in      \
      lto-plugin/configure        \
      ltoptions.m4                \
      zlib/configure
  fi

  cd ${srcdir}/${_realname}-${pkgver}

  #do not install libiberty
  sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in
  # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
  #sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure

  del_file_exists \
    gcc/testsuite/g++.dg/cpp0x/lambda/lambda-names1.C \
    gcc/config/i386/msys.h \
    gcc/config/i386/msys-w64.h \
    gcc/config/i386/t-msys-w64 \
    libgcc/config/i386/t-msys \
    gcc/config/i386/cygwin.opt \
    gcc/config/i386/cygwin-w64.h \
    gcc/config/i386/t-cygwin-w64

  apply_patch_with_msg gcc-4.7-combined-all-patches-that-worked-fully-witho.patch

  #patch -p0 -i ${srcdir}/gcc-4.8-filename-output.patch
  patch -p1 -i ${srcdir}/gcc-4.8-lambda-ICE.patch
  ###patch -p1 -i ${srcdir}/gcc-4.8-iconv.patch

  #1 of 3 work # patch -p0 -i ${srcdir}/gcc-4.8-libgcc-references.patch
  patch -p1 -i ${srcdir}/400-gcc-4.8-libstdc++export.patch
  patch -p1 -i ${srcdir}/gcc-4.7-stdthreads.patch

  # Cygwin patches
  #1 of ? work # patch -p2 -i ${srcdir}/001-4.7-execstack.patch
  #patch -p2 -i ${srcdir}/007-4.7-libffi-noinst.patch
  #? of ? work # patch -p2 -i ${srcdir}/gcc-4.8-libffi-cygwin64.patch
  #? of ? work # patch -p2 -i ${srcdir}/024-4.7-libitm-cygwin.patch
  apply_patch_with_msg gcc-4.7-libstdc-cygwin.patch
  #apply_patch_with_msg 010-4.7-lto-plugin-soname.patch
  #apply_patch_with_msg gcc-4.7-specs-cygwin.patch

  # Cygwin Backport patches
  # 942-crossconfig.m4-Add-support-for-cygwin-x64-target.patch \
  # 944-configure-Regenerated.patch \
  # ? # 940-dfp.m4-Add-support-for-cygwin-x64-target.patch \
  apply_patch_with_msg \
    943-config.host-Add-support-for-cygwin-x64-target.patch
    # 941-config.build-Add-support-for-cygwin-x64-target.patch
    # 945-gcc-4.8-libdecnumber-cygwin64.patch
    # 946-configure-Regenerated.patch

  # MSYS2 Patches
  apply_patch_with_msg \
    950-gcc-4.7-configure-msys2.patch
    # 951-gcc-4.8.0-msys2-spec.patch

  # GCC Backport patches
  apply_patch_with_msg 104-gcc-4.6.4-Fix-texi-docs-syntax-errors.patch

  # Misc Patches
  apply_patch_with_msg 461-gcc-4.0-cfns-fix-mismatch-in-gnu_inline-attributes.patch
}

build() {
  for _target in ${_targets}; do
  mkdir -p ${srcdir}/gcc-build-${_target} && cd ${srcdir}/gcc-build-${_target}

  local -a configure_opts
    
  case "${_target}" in
    i686*)
      local _conf="--disable-sjlj-exceptions --with-dwarf2"
      local _arch=i686
    ;;
    
    x86_64*)
      local _arch=x86-64
      local _conf=""
    ;;
  esac

  if [ "$_enable_gcc_lto" == "yes" ]; then
    configure_opts+=("--enable-lto")
  else
    configure_opts+=("--disable-lto")
  fi

  if [ "$_make_static_gcc_only" == "yes" ]; then
    configure_opts+=("--enable-static")
    configure_opts+=("--disable-shared")
  else
    configure_opts+=("--enable-static")
    configure_opts+=("--enable-shared")
  fi

  local _languages="c,c++"
  if [ "$_enable_gcc_lto" == "yes" ]; then
    _languages+=",lto"
  fi
  if [ "$_enable_fortran" == "yes" ]; then
    _languages+=",fortran"
  fi

  ../${_realname}-${pkgver}/configure \
    --prefix=/opt \
    --build=${CHOST} \
    --host=${CHOST} \
    --target=${_target} \
    --libexecdir=/opt/lib \
    --disable-bootstrap \
    --with-arch=${_arch} \
    --with-tune=generic \
    --enable-languages=${_languages} \
    --enable-threads=${_threads} \
    --enable-graphite \
    --enable-fully-dynamic-string \
    --enable-libstdcxx-time=yes \
    --disable-libstdcxx-pch \
    --disable-libstdcxx-debug \
    --enable-version-specific-runtime-libs \
    --enable-libgomp \
    --disable-multilib \
    --enable-checking=release \
    --disable-rpath \
    --disable-win32-registry \
    --disable-werror \
    --disable-symvers \
    --with-libiconv \
    --with-system-zlib \
    --without-isl \
    --with-{gmp,mpfr,mpc}=/usr \
    --with-gnu-as --with-gnu-ld \
    ${_conf} \
    "${configure_opts[@]}" \
    CFLAGS="-O2 -pipe" \
    CXXFALGS="-O2 -pipe"

  if [[ "$_make_static_gcc_only" == "yes" ]] ; then
    make all gcc
  else
    make all
  fi
  done
}

package() {
  for _target in ${_targets}; do
    cd ${srcdir}/gcc-build-${_target}
    if [[ "$_make_static_gcc_only" == "yes" ]] ; then
      make -j1 DESTDIR=${pkgdir} install gcc
    else
      make -j1 DESTDIR=${pkgdir} install
    fi
    mv ${pkgdir}/opt/lib/gcc/${_target}/lib/libgcc_s.a ${pkgdir}/opt/lib/gcc/${_target}/${pkgver}/
    mv ${pkgdir}/opt/lib/gcc/${_target}/libgcc*.dll ${pkgdir}/opt/lib/gcc/${_target}/${pkgver}/
    for _f in ${pkgdir}/opt/bin/*.exe; do
      strip -s ${_f}
    done
    for _f in ${pkgdir}/opt/lib/gcc/${_target}/${pkgver}/*.exe; do
      strip -s ${_f}
    done    
    rm -rf ${pkgdir}/opt/share
  done
}
