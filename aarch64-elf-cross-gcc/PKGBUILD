# Maintainer: Tim Stahlhut <stahta01@gmail.com>
# Contributor: Alexey Pavlov <alexpux@gmail.com>

# pacman -R mpfr-devel # This package interferes with this package buiding

_realname=gcc

# begin common toolchain options
_mingw_suff=aarch64-elf-cross
_targets="aarch64-elf"
_common_config_options="--disable-multilib --disable-threads"
# end common toolchain options

pkgname=("${_mingw_suff}-${_realname}")
pkgver=4.8.5
pkgrel=1
pkgdesc="Cross GCC for the aarch64-elf target"
arch=('i686' 'x86_64')
url="https://gcc.gnu.org"
license=('GPL' 'LGPL' 'FDL' 'custom')
groups=("${_mingw_suff}-toolchain" "${_mingw_suff}")
depends=("zlib" "${_mingw_suff}-binutils")
makedepends=("gcc" 'lndir')
#checkdepends=('dejagnu')
options=('!strip' 'staticlibs' '!emptydirs' '!buildflags')

_MPFR_VERSION=2.4.2       # 2.4.2 to 3.1.2 # 2.4.2 needs msys2 patch
_GMP_VERSION=4.3.2
_MPC_VERSION=0.8.1
_ISL_VERSION=0.12.2
_CLOOG_VERSION=0.18.1
_NEWLIB_VERSION=2.1.0

noextract=("gcc-${pkgver}.tar.gz"
  "mpfr-$_MPFR_VERSION.tar.xz"
  "gmp-${_GMP_VERSION}.tar.xz"
  "mpc-$_MPC_VERSION.tar.gz"
  "isl-$_ISL_VERSION.tar.bz2"
  "cloog-$_CLOOG_VERSION.tar.gz"
  "newlib-$_NEWLIB_VERSION.tar.gz")

source=(https://ftp.gnu.org/gnu/gcc/gcc-${pkgver}/gcc-${pkgver}.tar.gz
        ftp://gcc.gnu.org/pub/gcc/infrastructure/mpfr-$_MPFR_VERSION.tar.xz
        ftp://gcc.gnu.org/pub/gcc/infrastructure/gmp-${_GMP_VERSION}.tar.bz2
        ftp://gcc.gnu.org/pub/gcc/infrastructure/mpc-$_MPC_VERSION.tar.gz
        ftp://gcc.gnu.org/pub/gcc/infrastructure/isl-$_ISL_VERSION.tar.bz2
        ftp://gcc.gnu.org/pub/gcc/infrastructure/cloog-$_CLOOG_VERSION.tar.gz
        ftp://sourceware.org/pub/newlib/newlib-$_NEWLIB_VERSION.tar.gz
        800-mpfr-2.4.2-regenerate-using-autoreconf.patch)
sha256sums=('1dbc5cd94c9947fe5dffd298e569de7f44c3cedbd428fceea59490d336d8295a'
            'd7271bbfbc9ddf387d3919df8318cd7192c67b232919bfa1cb3202d07843da1b'
            '936162c0312886c21581002b79932829aa048cfaf9937c6265aeaa14f1cd1775'
            'e664603757251fd8a352848276497a4c79b7f8b21fd8aedd5cc0598a38fee3e4'
            'f4b3dbee9712850006e44f0db2103441ab3d13b406f77996d1df19ee89d11fb4'
            '02500a4edd14875f94fe84cbeda4290425cb0c1c2474c6f75d75a303d64b4196'
            '3e4d5ab9f0508942b6231b8ade4f8e5048cf92c96ed574c2bd6bd3320a599a48'
            'd4237454b06f35e809213978387d0a4990f408653003083e14e3f0c4dce5c083')

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _fname in "$@"
  do
    msg2 "Applying ${_fname}"
    patch -Nbp1 -i "${srcdir}"/${_fname}
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ] || [ -d $_fname ]; then
      rm -rf $_fname
    fi
  done
}

_extract() {
    local tarfile="$1"
    local extracted="$(echo "$tarfile" | sed 's/\.tar.*$//')"
    if [ ! -d  "${srcdir}/$extracted" ]; then
        tar xf "${srcdir}/$tarfile" -C "${srcdir}"
    fi
}

_extract_to_gcc_folder() {
    local tarfile="$1"
    local subfolder="$(echo "$tarfile" | sed 's/-.*$//')"
    if [ ! -d  "${srcdir}/gcc-${pkgver}/$subfolder" ]; then
        mkdir -p "${srcdir}/gcc-${pkgver}/$subfolder"
        tar -x --strip-components=1 -f "${srcdir}/$tarfile" -C "${srcdir}/gcc-${pkgver}/$subfolder"
    fi
}
# =========================================== #

prepare() {
  _extract                "gcc-${pkgver}.tar.gz"
  _extract_to_gcc_folder  "mpfr-$_MPFR_VERSION.tar.xz"
  _extract_to_gcc_folder  gmp-${_GMP_VERSION}.tar.bz2
  _extract_to_gcc_folder  mpc-$_MPC_VERSION.tar.gz
  _extract_to_gcc_folder  isl-$_ISL_VERSION.tar.bz2
  _extract_to_gcc_folder  cloog-$_CLOOG_VERSION.tar.gz
  _extract                "newlib-$_NEWLIB_VERSION.tar.gz"

  cd ${srcdir}/${_realname}-${pkgver}

  #do not install libiberty
  sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in

  cd ${srcdir}/${_realname}-${pkgver}/mpfr
  patch -Nbp1 -i "${srcdir}"/800-mpfr-2.4.2-regenerate-using-autoreconf.patch
}

build() {
  local _saved_path=$PATH

  for _target in ${_targets}; do
    [[ -d ${srcdir}/gcc-build-${_target} ]] && rm -rf ${srcdir}/gcc-build-${_target}
    [[ -d ${srcdir}/gcc-install-${_target} ]] && rm -rf ${srcdir}/gcc-install-${_target}
    mkdir -p ${srcdir}/gcc-build-${_target} && cd ${srcdir}/gcc-build-${_target}

    #export PATH=${srcdir}/gcc-install-${_target}/opt/bin:${srcdir}/gcc-install-${_target}/opt/libexec/gcc/aarch64-elf/4.9.4:/opt/bin:/opt/aarch64-elf/bin:${_saved_path}
    export PATH=/opt/bin:${_saved_path}
    echo "PATH := $PATH"

    # Build First Part of GCC
    ../${_realname}-${pkgver}/configure \
      --prefix=/opt \
      --build=${CHOST} \
      --host=${CHOST} \
      --target=${_target} \
      --enable-languages=c,c++ \
      --disable-libssp \
      --with-newlib \
      --with-headers=../newlib-${_NEWLIB_VERSION}/newlib/libc/include \
      ${_common_config_options}

    make all-gcc
    make -j1 DESTDIR=${srcdir}/gcc-install-${_target} install-gcc

    PATH=${srcdir}/gcc-install-${_target}/opt/bin:$PATH
    echo "PATH := $PATH"

    # Build Newlib
    [[ -d ${srcdir}/newlib-build-${_target} ]] && rm -rf ${srcdir}/newlib-build-${_target}
    [[ -d ${srcdir}/newlib-install-${_target} ]] && rm -rf ${srcdir}/newlib-install-${_target}
    mkdir -p ${srcdir}/newlib-build-${_target} && cd ${srcdir}/newlib-build-${_target}

    ../newlib-$_NEWLIB_VERSION/configure \
      --prefix=/opt \
      --target=${_target} \
      ${_common_config_options}
    make -j1
    make -j1 DESTDIR=${srcdir}/newlib-install-${_target} install

    # Build Standard C++ Library & the rest of GCC
    cd ${srcdir}/gcc-build-${_target}
    make -j1 all
    make -j1 DESTDIR=${srcdir}/gcc-install-${_target} install

  done
}

package() {
  for _target in ${_targets}; do
    cp -a -r ${srcdir}/gcc-install-${_target}/opt/ ${pkgdir}/opt/
    rm -rf ${pkgdir}/opt/share
  done
}
