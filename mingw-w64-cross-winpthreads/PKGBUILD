# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=winpthreads
_mingw_suff=mingw-w64-cross
_basegccver=4.8
pkgname="${_mingw_suff}-${_realname}"
pkgname="${_mingw_suff}-${_realname}-gcc${_basegccver}"
provides=("${_mingw_suff}-${_realname}")
conflicts=("${_mingw_suff}-${_realname}")
pkgver=7.0.0
pkgrel=1
pkgdesc="MinGW-w64 winpthreads library for cross-compiler"
arch=('i686' 'x86_64')
url="https://mingw-w64.sourceforge.io/"
license=('custom')
groups=("${_mingw_suff}-toolchain" "${_mingw_suff}")
makedepends=("${_mingw_suff}-gcc${_basegccver}"
             "${_mingw_suff}-binutils"
             "${_mingw_suff}-headers")
depends=("${_mingw_suff}-crt=${pkgver}")
optdepends=()
backup=()
options=('!strip' '!buildflags' 'staticlibs' '!emptydirs' '!buildflags')
_sourcedir=mingw-w64-v${pkgver}
source=("https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/mingw-w64-v${pkgver}.tar.bz2"
        0001-Define-__-de-register_frame_info-in-fake-libgcc_s.patch)
sha256sums=('SKIP'
            'd9e8af81682d9bf70e3d87506f51156cec61260b810a234bce861cb2eb3a5919')

_targets="i686-w64-mingw32"

prepare() {
  cd "${srcdir}/${_sourcedir}"
  patch -Nbp1 -i "${srcdir}"/0001-Define-__-de-register_frame_info-in-fake-libgcc_s.patch
  cd "${srcdir}/${_sourcedir}"/mingw-w64-libraries/winpthreads
  autoreconf -vfi
}

build() {
  for _target in ${_targets}; do
    mkdir -p ${srcdir}/winpthreads-build-${_target} && cd ${srcdir}/winpthreads-build-${_target}
    ${srcdir}/${_sourcedir}/mingw-w64-libraries/winpthreads/configure \
      --prefix=/opt/${_target} \
      --build=${CHOST} \
      --host=${_target} \
      --enable-static \
      --enable-shared
    make
  done
}

package() {
  for _target in ${_targets}; do
    cd ${srcdir}/winpthreads-build-${_target}
    make DESTDIR=${pkgdir} install

    # ${_mingw_suff}-headers package has these files
    rm ${pkgdir}/opt/${_target}/include/pthread_signal.h
    rm ${pkgdir}/opt/${_target}/include/pthread_time.h
    rm ${pkgdir}/opt/${_target}/include/pthread_unistd.h
  done
}
