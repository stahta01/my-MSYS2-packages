From ab3a55a2fc5cbf07e53b9d8baf1b88875e6e260e Mon Sep 17 00:00:00 2001
From: Tim Stahlhut <stahta01@gmail.com>
Date: Thu, 23 Jul 2020 14:11:22 -0400
Subject: cygwin: Backport of SVN 197171

2013-03-27 Kai Tietz <ktietz@redhat.com>
config.build: Add support for cygwin x64 target.

        * config.build: Add support for cygwin x64 target.
        * config.gcc: Likewise.
        * config.host: Likewise.
        * configure.ac: Likewise
        * configure: Regenerated.
---
 gcc/config.build |  2 +-
 gcc/config.gcc   | 16 ++++++++++++++++
 gcc/config.host  |  2 +-
 gcc/configure    |  2 +-
 gcc/configure.ac |  2 +-
 5 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/gcc/config.build b/gcc/config.build
index 6c837c3c32f..77577295b7a 100644
--- a/gcc/config.build
+++ b/gcc/config.build
@@ -75,7 +75,7 @@ case $build in
     # IBM 360/370/390 Architecture
     build_xm_defines='FATAL_EXIT_CODE=12'
     ;;
-  i[34567]86-*-cygwin* | i[34567]86-*-pe )
+  i[34567]86-*-cygwin* | x86_64-*-cygwin* | i[34567]86-*-pe )
     build_xm_file=i386/xm-cygwin.h
     build_exeext=.exe
     ;;
diff --git a/gcc/config.gcc b/gcc/config.gcc
index 6dc2427bc7c..1884584eb82 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -1487,6 +1487,22 @@ i[34567]86-*-pe | i[34567]86-*-cygwin*)
 	fi
 	use_gcc_stdint=wrap
 	;;
+x86_64-*-cygwin*)
+	need_64bit_isa=yes
+	tm_file="${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/cygwin.h i386/cygwin-w64.h i386/cygwin-stdint.h"
+	xm_file=i386/xm-cygwin.h
+	tmake_file="${tmake_file} i386/t-cygming t-slibgcc i386/t-cygwin-w64"
+	target_gtfiles="\$(srcdir)/config/i386/winnt.c"
+	extra_options="${extra_options} i386/cygming.opt"
+	extra_objs="winnt.o winnt-stubs.o"
+	c_target_objs="${c_target_objs} msformat-c.o"
+	cxx_target_objs="${cxx_target_objs} winnt-cxx.o msformat-c.o"
+	if test x$enable_threads = xyes; then
+		thread_file='posix'
+	fi
+	use_gcc_stdint=wrap
+	tm_defines="${tm_defines} TARGET_CYGWIN64=1"
+	;;
 i[34567]86-*-mingw* | x86_64-*-mingw*)
 	tm_file="${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/mingw32.h"
 	xm_file=i386/xm-mingw32.h
diff --git a/gcc/config.host b/gcc/config.host
index d0342b996e6..f3ca1ab2ffb 100644
--- a/gcc/config.host
+++ b/gcc/config.host
@@ -211,7 +211,7 @@ case ${host} in
         ;;
     esac
     ;;
-  i[34567]86-*-pe | i[34567]86-*-cygwin*)
+  i[34567]86-*-pe | i[34567]86-*-cygwin* | x86_64-*-cygwin*)
     host_xm_file=i386/xm-cygwin.h
     out_host_hook_obj=host-cygwin.o
     host_xmake_file="${host_xmake_file} i386/x-cygwin"
diff --git a/gcc/configure b/gcc/configure
index f9b21ebc927..d0d10cae556 100755
--- a/gcc/configure
+++ b/gcc/configure
@@ -23562,7 +23562,7 @@ fi
 	# wrappers to aid in interposing and redirecting operators new, delete,
 	# etc., as per n2800 #17.6.4.6 [replacement.functions].  Check if we
 	# are configuring for a version of Cygwin that exports the wrappers.
-	if test x$host = x$target; then
+	if test x$host = x$target && test x$host_cpu = xi686; then
 	  ac_fn_c_check_func "$LINENO" "__wrap__Znaj" "ac_cv_func___wrap__Znaj"
 if test "x$ac_cv_func___wrap__Znaj" = x""yes; then :
   gcc_ac_cygwin_dll_wrappers=yes
diff --git a/gcc/configure.ac b/gcc/configure.ac
index 8d0549d169a..5c136de8e0c 100644
--- a/gcc/configure.ac
+++ b/gcc/configure.ac
@@ -3361,7 +3361,7 @@ changequote([,])dnl
 	# wrappers to aid in interposing and redirecting operators new, delete,
 	# etc., as per n2800 #17.6.4.6 [replacement.functions].  Check if we
 	# are configuring for a version of Cygwin that exports the wrappers.
-	if test x$host = x$target; then
+	if test x$host = x$target && test x$host_cpu = xi686; then
 	  AC_CHECK_FUNC([__wrap__Znaj],[gcc_ac_cygwin_dll_wrappers=yes],[gcc_ac_cygwin_dll_wrappers=no])
 	else
 	  # Can't check presence of libc functions during cross-compile, so
-- 
